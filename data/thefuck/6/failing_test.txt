========================================================================================== FAILURES ==========================================================================================
_________________________________________________ test_get_new_command[git checkout -b "let's-push-this"-let's-push-this-let\\'s-push-this] __________________________________________________

output = "fatal: A branch named 'let's-push-this' already exists."
new_command = ["git branch -d let\\'s-push-this && git branch let\\'s-push-this", "git branch -d let\\'s-push-this && git checkout -...s-push-this", "git branch -D let\\'s-push-this && git checkout -b let\\'s-push-this", "git checkout let\\'s-push-this"]
script = 'git checkout -b "let\'s-push-this"', src_branch_name = "let's-push-this", branch_name = "let\\'s-push-this"

    @pytest.mark.parametrize('script, src_branch_name, branch_name', [
        # ('git branch foo', 'foo', 'foo'),
        # ('git checkout bar', 'bar', 'bar'),
        ('git checkout -b "let\'s-push-this"', "let's-push-this", "let\\'s-push-this")])
    def test_get_new_command(output, new_command, script, src_branch_name, branch_name):
>       assert get_new_command(Command(script, output)) == new_command

branch_name = "let\\'s-push-this"
new_command = ["git branch -d let\\'s-push-this && git branch let\\'s-push-this", "git branch -d let\\'s-push-this && git checkout -...s-push-this", "git branch -D let\\'s-push-this && git checkout -b let\\'s-push-this", "git checkout let\\'s-push-this"]
output     = "fatal: A branch named 'let's-push-this' already exists."
script     = 'git checkout -b "let\'s-push-this"'
src_branch_name = "let's-push-this"

tests/rules/test_git_branch_exists.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
<decorator-gen-6>:2: in get_new_command
    ???
thefuck/specific/git.py:32: in git_support
    return fn(command)
<decorator-gen-5>:2: in get_new_command
    ???
thefuck/utils.py:136: in eager
    return list(fn(*args, **kwargs))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = Command(script=git checkout -b "let's-push-this", output=fatal: A branch named 'let's-push-this' already exists.)

    @git_support
    @eager
    def get_new_command(command):
>       branch_name = re.findall(
            r"fatal: A branch named '([^']*)' already exists.", command.output)[0]
E       IndexError: list index out of range

command    = Command(script=git checkout -b "let's-push-this", output=fatal: A branch named 'let's-push-this' already exists.)

thefuck/rules/git_branch_exists.py:16: IndexError
================================================================================== 1 failed in 0.36 seconds ==================================================================================